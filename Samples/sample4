import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Logger;

import com.pantgwyn.objectsort.ObjectSort;

/**
 * perform input callback => output callback sort
 *
 */
public class Sample4
{
	private static final Logger	LOG						= Logger.getLogger(SortTest.class.getName());
	private static final String	TEMP_DIR	= "/tmp/objSort/";

	public static void main(String[] args) throws IOException,
																																								ClassNotFoundException
	{

		int recordCount = 100000; // test objects to create
		
		long									timeStart;
		long									timeElapse;
		
		if (!tempExists())
		{
			LOG.warning("unable to access:" + TEMP_DIR);
			return;
		}

		SomeClassComparator			comp							= new SomeClassComparator();
		SomeClassSortIn							inCallback	= new SomeClassSortIn(recordCount);
		SomeClassSortOut						outCallback	= new SomeClassSortOut();
		ObjectSort<SomeClass>	sort							= new ObjectSort<SomeClass>();

		timeStart			= new Date().getTime();
		if (sort.sort(inCallback, outCallback, comp, TEMP_DIR + "sortWork"))
		{
			timeElapse		= new Date().getTime() - timeStart;
			LOG.info("sort reported - worked - elapsed time:" + timeElapse + "ms");
			
		}

		else
			LOG.warning("sort reported - failed");

	}

	

	private static boolean tempExists()
	{
		File dir = new File(TEMP_DIR);

		// if the directory does not exist, create it
		if (!dir.exists())
		{
			try
			{
				dir.mkdir();
			} catch (SecurityException se)
			{
				return false;
			}

		}
		return true;
	}
}
